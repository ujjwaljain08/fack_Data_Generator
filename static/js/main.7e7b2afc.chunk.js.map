{"version":3,"sources":["data/option.js","Form.js","Navbar.js","App.js","index.js"],"names":["options","address","zipCode","zipCodeByState","city","cityPrefix","citySuffix","streetName","streetAddress","streetSuffix","streetPrefix","secondaryAddress","county","country","countryCode","state","stateAbbr","latitude","longitude","direction","cardinalDirection","ordinalDirection","nearbyGPSCoordinate","timeZone","commerce","color","department","productName","price","productAdjective","productMaterial","product","productDescription","database","column","type","collation","engine","date","past","future","between","recent","soon","month","weekday","finance","account","accountName","routingNumber","mask","amount","transactionType","currencyCode","currencyName","currencySymbol","bitcoinAddress","litecoinAddress","creditCardNumber","creditCardCVV","ethereumAddress","iban","bic","transactionDescription","git","branch","commitEntry","commitMessage","commitSha","shortSha","hacker","abbreviation","adjective","noun","verb","ingverb","phrase","helpers","randomize","slugify","replaceSymbolWithNumber","replaceSymbols","replaceCreditCardSymbols","repeatString","regexpStyleStringParse","shuffle","mustache","createCard","contextualCard","userCard","createTransaction","image","avatar","imageUrl","abstract","animals","business","cats","food","nightlife","fashion","people","nature","sports","technics","transport","dataUri","internet","email","exampleEmail","userName","protocol","url","domainName","domainSuffix","domainWord","ip","ipv6","userAgent","mac","password","lorem","word","words","sentence","slug","sentences","paragraph","paragraphs","text","lines","company","suffixes","companyName","companySuffix","catchPhrase","bs","catchPhraseAdjective","catchPhraseDescriptor","catchPhraseNoun","bsAdjective","bsBuzz","bsNoun","name","firstName","lastName","findName","jobTitle","gender","prefix","suffix","title","jobDescriptor","jobArea","jobType","phone","phoneNumber","phoneNumberFormat","phoneFormats","random","number","float","arrayElement","arrayElements","objectElement","uuid","boolean","locale","alpha","alphaNumeric","hexaDecimal","system","fileName","commonFileName","mimeType","commonFileType","commonFileExt","fileType","fileExt","directoryPath","filePath","semver","dataTemplate","categories","Object","keys","usedStyles","makeStyles","theme","FormControl","minWidth","chips","display","flexWrap","chip","margin","Form","props","classes","useState","data","setData","numberofdata","setNumberOfData","handleChange","event","console","log","target","value","copyData","forEach","item","Grid","container","spacing","map","category","sm","Paper","component","Box","p","className","InputLabel","Select","renderValue","sel","Chip","label","fullWidth","multiple","onChange","MenuItem","my","TextField","e","variant","placeholder","Button","onClick","array","i","key","undefined","faker","push","download","JSON","stringify","Navbar","AppBar","position","Typography","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e7b2afc.chunk.js","sourcesContent":["export const options = {\r\n    address: {\r\n      zipCode: \"\",\r\n      zipCodeByState: \"\",\r\n      city: \"\",\r\n      cityPrefix: \"\",\r\n      citySuffix: \"\",\r\n      streetName: \"\",\r\n      streetAddress: \"\",\r\n      streetSuffix: \"\",\r\n      streetPrefix: \"\",\r\n      secondaryAddress: \"\",\r\n      county: \"\",\r\n      country: \"\",\r\n      countryCode: \"\",\r\n      state: \"\",\r\n      stateAbbr: \"\",\r\n      latitude: \"\",\r\n      longitude: \"\",\r\n      direction: \"\",\r\n      cardinalDirection: \"\",\r\n      ordinalDirection: \"\",\r\n      nearbyGPSCoordinate: \"\",\r\n      timeZone: \"\",\r\n    },\r\n    commerce: {\r\n      color: \"\",\r\n      department: \"\",\r\n      productName: \"\",\r\n      price: \"\",\r\n      productAdjective: \"\",\r\n      productMaterial: \"\",\r\n      product: \"\",\r\n      productDescription: \"\",\r\n    },\r\n    database: { column: \"\", type: \"\", collation: \"\", engine: \"\" },\r\n    date: {\r\n      past: \"\",\r\n      future: \"\",\r\n      between: \"\",\r\n      recent: \"\",\r\n      soon: \"\",\r\n      month: \"\",\r\n      weekday: \"\",\r\n    },\r\n    finance: {\r\n      account: \"\",\r\n      accountName: \"\",\r\n      routingNumber: \"\",\r\n      mask: \"\",\r\n      amount: \"\",\r\n      transactionType: \"\",\r\n      currencyCode: \"\",\r\n      currencyName: \"\",\r\n      currencySymbol: \"\",\r\n      bitcoinAddress: \"\",\r\n      litecoinAddress: \"\",\r\n      creditCardNumber: \"\",\r\n      creditCardCVV: \"\",\r\n      ethereumAddress: \"\",\r\n      iban: \"\",\r\n      bic: \"\",\r\n      transactionDescription: \"\",\r\n    },\r\n    git: {\r\n      branch: \"\",\r\n      commitEntry: \"\",\r\n      commitMessage: \"\",\r\n      commitSha: \"\",\r\n      shortSha: \"\",\r\n    },\r\n    hacker: {\r\n      abbreviation: \"\",\r\n      adjective: \"\",\r\n      noun: \"\",\r\n      verb: \"\",\r\n      ingverb: \"\",\r\n      phrase: \"\",\r\n    },\r\n    helpers: {\r\n      randomize: \"\",\r\n      slugify: \"\",\r\n      replaceSymbolWithNumber: \"\",\r\n      replaceSymbols: \"\",\r\n      replaceCreditCardSymbols: \"\",\r\n      repeatString: \"\",\r\n      regexpStyleStringParse: \"\",\r\n      shuffle: \"\",\r\n      mustache: \"\",\r\n      createCard: \"\",\r\n      contextualCard: \"\",\r\n      userCard: \"\",\r\n      createTransaction: \"\",\r\n    },\r\n    image: {\r\n      image: \"\",\r\n      avatar: \"\",\r\n      imageUrl: \"\",\r\n      abstract: \"\",\r\n      animals: \"\",\r\n      business: \"\",\r\n      cats: \"\",\r\n      city: \"\",\r\n      food: \"\",\r\n      nightlife: \"\",\r\n      fashion: \"\",\r\n      people: \"\",\r\n      nature: \"\",\r\n      sports: \"\",\r\n      technics: \"\",\r\n      transport: \"\",\r\n      dataUri: \"\"   \r\n    },\r\n    internet: {\r\n      avatar: \"\",\r\n      email: \"\",\r\n      exampleEmail: \"\",\r\n      userName: \"\",\r\n      protocol: \"\",\r\n      url: \"\",\r\n      domainName: \"\",\r\n      domainSuffix: \"\",\r\n      domainWord: \"\",\r\n      ip: \"\",\r\n      ipv6: \"\",\r\n      userAgent: \"\",\r\n      color: \"\",\r\n      mac: \"\",\r\n      password: \"\",\r\n    },\r\n    lorem: {\r\n      word: \"\",\r\n      words: \"\",\r\n      sentence: \"\",\r\n      slug: \"\",\r\n      sentences: \"\",\r\n      paragraph: \"\",\r\n      paragraphs: \"\",\r\n      text: \"\",\r\n      lines: \"\",\r\n    },\r\n    company: {\r\n      suffixes: \"\",\r\n      companyName: \"\",\r\n      companySuffix: \"\",\r\n      catchPhrase: \"\",\r\n      bs: \"\",\r\n      catchPhraseAdjective: \"\",\r\n      catchPhraseDescriptor: \"\",\r\n      catchPhraseNoun: \"\",\r\n      bsAdjective: \"\",\r\n      bsBuzz: \"\",\r\n      bsNoun: \"\",\r\n    },\r\n    name: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      findName: \"\",\r\n      jobTitle: \"\",\r\n      gender: \"\",\r\n      prefix: \"\",\r\n      suffix: \"\",\r\n      title: \"\",\r\n      jobDescriptor: \"\",\r\n      jobArea: \"\",\r\n      jobType: \"\",\r\n    },\r\n    phone: { phoneNumber: \"\", phoneNumberFormat: \"\", phoneFormats: \"\" },\r\n    random: {\r\n      number: \"\",\r\n      float: \"\",\r\n      arrayElement: \"\",\r\n      arrayElements: \"\",\r\n      objectElement: \"\",\r\n      uuid: \"\",\r\n      boolean: \"\",\r\n      word: \"\",\r\n      words: \"\",\r\n      image: \"\",\r\n      locale: \"\",\r\n      alpha: \"\",\r\n      alphaNumeric: \"\",\r\n      hexaDecimal: \"\",\r\n    },\r\n    system: {\r\n      fileName: \"\",\r\n      commonFileName: \"\",\r\n      mimeType: \"\",\r\n      commonFileType: \"\",\r\n      commonFileExt: \"\",\r\n      fileType: \"\",\r\n      fileExt: \"\",\r\n      directoryPath: \"\",\r\n      filePath: \"\",\r\n      semver: \"\",\r\n    },\r\n  };\r\n  \r\n  // template\r\n  export const dataTemplate = {\r\n    address: {},\r\n    commerce: {},\r\n    database: {},\r\n    date: {},\r\n    finance: {},\r\n    git: {},\r\n    hacker: {},\r\n    helpers: {},\r\n    image: {},\r\n    internet: {},\r\n    lorem: {},\r\n    company: {},\r\n    name: {},\r\n    phone: {},\r\n    random: {},\r\n    system: {},\r\n  };","import React,{useState} from 'react';\r\nimport {options,dataTemplate} from \"./data/option\";\r\nimport \r\n{Grid,Paper,Box,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n    Chip,\r\n    MenuItem,\r\n    makeStyles,Button} from \"@material-ui/core\";\r\n    \r\nimport faker from \"faker\";\r\nimport download from \"downloadjs\";\r\n\r\n const categories=Object.keys(options);\r\n\r\n\r\n\r\nconst usedStyles=makeStyles(theme =>({\r\n    FormControl:{\r\n        minWidth:\"100%\"\r\n    },\r\n    chips:{\r\n        display:\"flex\",\r\n        flexWrap:\"wrap\"\r\n    },\r\n    chip:{\r\n        margin:2,\r\n    }\r\n\r\n}),)\r\n\r\nconst Form = (props) => {\r\n    const classes=usedStyles();\r\n    const [data, setData] = useState(dataTemplate);\r\n    const [numberofdata, setNumberOfData] = useState(1)\r\n    const handleChange=(event)=>{\r\n       \r\n        console.log(event.target.name,event.target.value);\r\n        let copyData={...data };\r\n        copyData[event.target.name]={}\r\n        event.target.value.forEach(item =>{\r\n            copyData[event.target.name][item]=\"\";\r\n        })\r\n        setData(copyData);\r\n    };\r\n    const generatData=()=>{\r\n        let copyData=options;\r\n        let array=[];\r\n        for(let i=0;i<numberofdata;i++){\r\n            for(let category of categories){\r\n                for(let key of Object.keys(options[category])){\r\n                    if(data[category][key]!=undefined){\r\n                        copyData[category][key]=faker[category][key]();\r\n                    }\r\n                }\r\n           }\r\n           array.push(copyData);\r\n           copyData=options;\r\n        }\r\n         download(JSON.stringify(array),\"Fake_Data.json\",\"json\")\r\n         setNumberOfData(1);\r\n         setData(dataTemplate)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div>\r\n            <Grid container spacing={2}>\r\n                {\r\n                   categories.map(category =>(\r\n                       <Grid item sm={3}>\r\n                        <Paper component={Box} p={3}>\r\n                           <FormControl className={classes.FormControl}>\r\n                               <InputLabel>{category}</InputLabel>\r\n                               <Select \r\n                               renderValue={(sel)=>(\r\n                                   <div className={classes.chips}>\r\n                                       {\r\n                                        sel.map((value)=>(\r\n                                            <Chip className={classes.chip} key={value} label={value} />\r\n                                        ))\r\n\r\n                                       }\r\n                                   </div>\r\n                               )}\r\n                               name={category}\r\n                               fullWidth\r\n                               multiple\r\n                               value={Object.keys(data[category])}\r\n                               onChange={handleChange}\r\n                               >\r\n                                {\r\n                                    Object.keys(options[category]).map(name =>(\r\n                                       <MenuItem key={name} value={name}>{name}</MenuItem>\r\n\r\n                                    ))\r\n                                   \r\n                                }\r\n                             \r\n                               </Select>\r\n                           </FormControl>\r\n                       </Paper>\r\n                       </Grid>\r\n                       \r\n                      \r\n                   )) \r\n                }\r\n            </Grid>\r\n        </div>\r\n        <Paper component={Box} my={1} p={3}>\r\n            <TextField fullWidth value={numberofdata}\r\n             onChange={(e) =>setNumberOfData(e.target.value)} \r\n             variant=\"outlined\" label=\"enter the no. fake data\"\r\n              placeholder=\"enter the no.\"\r\n              \r\n              > </TextField>\r\n                \r\n        </Paper><Button variant=\"contained\" color=\"secondary\"\r\n                onClick={generatData}>Click To Get</Button>\r\n\r\n        </>\r\n    );\r\n}\r\n//working\r\nexport default Form;\r\n","import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div className=\"mb\">\r\n             <AppBar position=\"static\">\r\n             <Typography variant=\"h6\"  >\r\n            Fack Data Generator\r\n          </Typography>\r\n             </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import \"./styles/App.css\";\nimport {Container,Box} from \"@material-ui/core\"\nimport Form from \"./Form\"\nimport Navbar from \"./Navbar\"\nfunction App() {\n  return (\n    <div className=\"App\">\n  <Navbar  />\n   <Form />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n \nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n "],"sourceRoot":""}